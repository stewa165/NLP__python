# -*- coding: utf-8 -*-
"""Sentiment Analysis Using TextBlob.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OPanToLJq6pwPKXf0QwBijlDB0aYZlfu
"""

from textblob import TextBlob

"""# Sentiment - polarity and subjectivity"""

text = "Today was a good day"
#text = "Amazing customer service."
#text = "This smart speaker is great at controlling your smart home and light music listening. While it sounds okay to a person with good taste in sound, the normal consumer would love this. Overall a must-buy!"
#text = "I purchased this as I always do with the latest and greatest echo devices. This was a sour disappointment for someone who is used to amazon improving on their devices yearly."

my_valence = TextBlob(text)

my_valence.sentiment

"""# Word Cloud"""

from wordcloud import WordCloud
import matplotlib.pyplot as plt

east_of_eden = '''I remember my childhood names for grasses and secret flowers. 
I remember where a toad may live and what time the birds awaken in the summer—and what trees and seasons smelled like—how people looked and walked and smelled even. 
The memory of odors is very rich.'''

# Generate the word cloud from the east_of_eden string
cloud_east_of_eden = WordCloud(background_color="white").generate(east_of_eden) #wordcloud can also have argument 'stopwords'

# Create a figure of the generated cloud
plt.imshow(cloud_east_of_eden, interpolation='bilinear')  #interpolation makes word cloud appear more smoothly
plt.axis('off')
# Display the figure
plt.show()

"""# POS Tagging and Noun Phrase Extraction"""

import nltk
nltk.download('averaged_perceptron_tagger')
nltk.download('brown')
nltk.download('punkt')

wiki = TextBlob("Python is a high-level, general-purpose programming language.")
print(wiki.tags)
print(wiki.noun_phrases)

"""# Noun Phrase Frequencies"""

monty = TextBlob("We are no longer the Knights who say Ni. "
                     "We are now the Knights who say Ekki ekki ekki PTANG.")

print(monty.word_counts['ekki'])
print(monty.words.count('ekki', case_sensitive = True))
print(wiki.noun_phrases.count('python'))

"""# Tokenization"""

import nltk
nltk.download('punkt')

zen = TextBlob("Beautiful is better than ugly. "
                "Explicit is better than implicit. "
                "Simple is better than complex.")
print(zen.words)
print(zen.sentences)

for sentence in zen.sentences:
  print(sentence)

"""# Words Inflection and Lemmatization"""

from textblob import Word
nltk.download('wordnet')

sentence = TextBlob('Use 4 spaces per indentation level.')
sentence.words
print(sentence.words[2].singularize())
print(sentence.words[-1].pluralize())

w1 = Word("octopi")
print(w1.lemmatize())

w2 = Word("went")
print(w2.lemmatize("v")) #passing in part of speech